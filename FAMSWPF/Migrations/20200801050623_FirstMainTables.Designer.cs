// <auto-generated />
using FAMSWPF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FAMSWPF.Migrations
{
    [DbContext(typeof(FAMSContext))]
    [Migration("20200801050623_FirstMainTables")]
    partial class FirstMainTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FAMSWPF.Library.Models.Foundation.AccountNature", b =>
                {
                    b.Property<string>("NatureId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool>("DebitNatured")
                        .HasColumnType("bit");

                    b.Property<string>("NatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("NatureId");

                    b.ToTable("AccountNature","Foundation");
                });

            modelBuilder.Entity("FAMSWPF.Library.Models.Foundation.MainAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureId")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AccountId");

                    b.HasIndex("NatureId");

                    b.ToTable("MainAccount","Foundation");
                });

            modelBuilder.Entity("FAMSWPF.Library.Models.Sample.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories","TestSchema");
                });

            modelBuilder.Entity("FAMSWPF.Library.Models.Sample.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId")
                        .HasName("IX_CategoryId_Test");

                    b.ToTable("Products","TestSchema");
                });

            modelBuilder.Entity("FAMSWPF.Library.Models.Foundation.MainAccount", b =>
                {
                    b.HasOne("FAMSWPF.Library.Models.Foundation.AccountNature", "AccountNature")
                        .WithMany("MainAccounts")
                        .HasForeignKey("NatureId");
                });

            modelBuilder.Entity("FAMSWPF.Library.Models.Sample.Product", b =>
                {
                    b.HasOne("FAMSWPF.Library.Models.Sample.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
